---
- name: Deploy Docker Compose Application
  gather_facts: false
  hosts: ec2_instances
  vars:
    docker_compose_file: "{{ playbook_dir }}/docker-compose.yml"  # Local path to your docker-compose file
    remote_compose_directory: /home/ubuntu/ansible_test
    remote_compose_path: "{{ remote_compose_directory }}/docker-compose.yml"  # Path on the remote EC2 instance

  tasks:
    - name: Copy docker-compose file to EC2 instance
      copy:
        src: "{{ docker_compose_file }}"
        dest: "{{ remote_compose_path }}"

    # - name: Install required packages for Docker installation
    #   apt:
    #     name:
    #       - apt-transport-https
    #       - ca-certificates
    #       - curl
    #       - software-properties-common
    #     state: present

    # - name: Add Docker's official GPG key
    #   apt_key:
    #     url: https://download.docker.com/linux/ubuntu/gpg
    #     state: present

    # - name: Add Docker repository
    #   apt_repository:
    #     repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    #     state: present

    # - name: Install Docker
    #   apt:
    #     name: docker-ce
    #     state: latest

    # - name: Install Docker Compose
    #   command: >
    #     curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_os_family | lower }}-{{ ansible_architecture }}" 
    #     -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose

    - name: Ensure docker-compose file exists
      stat:
        path: "{{ remote_compose_path }}"
      register: compose_file

    # - name: Start services using docker-compose
    #   command: docker-compose up -d
    #   args:
    #     chdir: "{{ remote_compose_directory }}"  # Ensure the command runs in the correct directory
    #   when: compose_file.stat.exists  # Only run if the file exists
    #   register: compose_output
    #   ignore_errors: yes  # Continue even if there's an error

    # - name: Display docker-compose output
    #   debug:
    #     var: compose_output.stdout_lines
    #   when: compose_output is defined and compose_output.rc != 0  # Show output only if there was an error
